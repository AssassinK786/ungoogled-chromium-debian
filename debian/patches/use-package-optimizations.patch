--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -2154,7 +2154,7 @@
     # vectorization while otherwise optimizing for size.
     rustflags = [ "-Copt-level=s" ]
   } else {
-    cflags = [ "-O2" ] + common_optimize_on_cflags
+    cflags = common_optimize_on_cflags
 
     # The `-O3` for clang turns on extra optimizations compared to the standard
     # `-O2`. But for rust, `-Copt-level=3` is the default and is thus reliable
@@ -2225,7 +2225,7 @@
     } else if (optimize_for_fuzzing) {
       cflags = [ "-O1" ] + common_optimize_on_cflags
     } else {
-      cflags = [ "-O2" ] + common_optimize_on_cflags
+      cflags = common_optimize_on_cflags
     }
     rustflags = [ "-Copt-level=3" ]
   }
@@ -2258,7 +2258,7 @@
     } else if (optimize_for_fuzzing) {
       cflags = [ "-O1" ] + common_optimize_on_cflags
     } else {
-      cflags = [ "-O3" ] + common_optimize_on_cflags
+      cflags = common_optimize_on_cflags
     }
     rustflags = [ "-Copt-level=3" ]
   }
--- a/tools/gn/build/gen.py
+++ b/tools/gn/build/gen.py
@@ -395,10 +395,8 @@
       cflags.extend(['-O0', '-g'])
     else:
       cflags.append('-DNDEBUG')
-      cflags.append('-O3')
       if options.no_strip:
         cflags.append('-g')
-      ldflags.append('-O3')
       # Use -fdata-sections and -ffunction-sections to place each function
       # or data item into its own section so --gc-sections can eliminate any
       # unused functions and data items.
